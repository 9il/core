# Snapshot of the currently relevant parts of the deployed nginx.conf
http {
    server {
        server_name run.dlang.org;
        rewrite ^/(.*)$ https://run.dlang.io permanent;
    }

    server {
        listen       443 ssl http2 default_server;
        listen       [::]:443 ssl http2 default_server;
        server_name  _ tour.dlang.org tour.dlang.io run.dlang.io editor.dlang.io mir.dlang.science;
        #root         /usr/share/nginx/html;

        include /etc/nginx/conf.d/letsencrypt.conf;

        ssl_certificate "/etc/letsencrypt/live/tour.dlang.io/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/tour.dlang.io/privkey.pem";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location /api/v1/run {
            # cors
            add_header 'Access-Control-Allow-Origin' '*';
            #proxy_ignore_headers Access-Control-Allow-Origin;
            # apply rate limiting
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_cache api_cache;
            proxy_cache_lock on;
            proxy_cache_methods POST;
            proxy_cache_key "$request_uri|$request_body";
            proxy_cache_valid 7d;

            proxy_ignore_headers Expires;
            proxy_ignore_headers X-Accel-Expires;
            proxy_ignore_headers Cache-Control;
            proxy_ignore_headers Set-Cookie;

            proxy_hide_header X-Accel-Expires;
            proxy_hide_header Expires;
            proxy_hide_header Cache-Control;
            proxy_hide_header Pragma;
            proxy_hide_header Access-Control-Allow-Origin;

            proxy_buffering on;
            proxy_buffers 8 32k;
            proxy_buffer_size 64k;
            client_max_body_size 64k;
            add_header X-Cached $upstream_cache_status;
            limit_req zone=api burst=5;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            }
            proxy_pass http://127.0.0.1:8080;
        }

        location /api {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            limit_req zone=api burst=5;
            proxy_pass http://127.0.0.1:8080;
        }

        location / {
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }
   }
}
